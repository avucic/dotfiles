# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# GENERAL
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# Default index
set -g base-index 1
setw -g pane-base-index 1
set-option -gw xterm-keys on
set -g status-keys vi
set -g history-limit 30000
set -g default-shell $SHELL
#set -g default-command "reattach-to-user-namespace -l ${SHELL}"
#Automatically set window title
# set-window-option -g automatic-rename on
set-window-option -g mode-keys vi
set-option -g set-titles on
# set -g display-panes-time 2500
set -g default-terminal "tmux-256color-italic"
set -as terminal-overrides ',xterm*:sitm=\E[3m'

set-option -ga terminal-overrides ",xterm-256color:Tc"
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# BINDINGS
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# vim mode, plus vim style keys
set-window-option -g mode-keys vi
bind-key -T copy-mode-vi 'v' send-keys -X begin-selection
#bind-key -T copy-mode-vi 'y' send -X copy-pipe-and-cancel "reattach-to-user-namespace pbcopy"
bind-key -T copy-mode-vi 'r' send-keys -X rectangle-toggle
# change prefix
unbind C-b
set -g prefix `
bind-key ` send-prefix
bind-key L last-window

# Fix cursor insert shape for nvim
set -g -a terminal-overrides ',*:Ss=\E[%p1%d q:Se=\E[2 q'

## Join windows: <prefix> s, <prefix> j
bind-key j command-prompt -p "join pane from:"  "join-pane -s '%%'"
bind-key s command-prompt -p "send pane to:"  "join-pane -t '%%'"

# Reload config
bind r source-file ~/.tmux.conf \; display "Reloading config..."
# Pane splitting
bind | split-window -h
bind - split-window -v
# Pane resizing
bind H resize-pane -L 5
bind J resize-pane -D 5
bind K resize-pane -U 5
bind L resize-pane -R 5
# Movement
bind l select-pane -L
bind j select-pane -D
bind k select-pane -U
bind h select-pane -R
bind-key Tab next-window
bind-key S-Tab previous-window
bind = select-layout even-horizontal
#bind -r C-h select-window -t :-
#bind -r C-l select-window -t :+
set -g @onedark_widgets "#(date +%s)"

set -g pane-active-border-style bg=default,fg=magenta
set -g pane-border-style fg=green


set-option -g mouse on

# make scrolling with wheels work
bind -n WheelUpPane if-shell -F -t = "#{mouse_any_flag}" "send-keys -M" "if -Ft= '#{pane_in_mode}' 'send-keys -M' 'select-pane -t=; copy-mode -e; send-keys -M'"
bind -n WheelDownPane select-pane -t= \; send-keys -M

# setw -g monitor-activity on
# set -g visual-activity on
# set-window-option -g window-status-current-bg magenta

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    # | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
# bind-key -n 'C-h' if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
# bind-key -n 'C-j' if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
# bind-key -n 'C-k' if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
# bind-key -n 'C-l' if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'
# tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
# if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    # "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
# if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    # "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

# bind-key -T copy-mode-vi 'C-h' select-pane -L
# bind-key -T copy-mode-vi 'C-j' select-pane -D
# bind-key -T copy-mode-vi 'C-k' select-pane -U
# bind-key -T copy-mode-vi 'C-l' select-pane -R
# bind-key -T copy-mode-vi 'C-\' select-pane -l


# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# COLORS
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# set -g status-bg "#323537"
# set -g message-command-fg "#838184"
# set -g status-justify "left"
# set -g status-left-length "100"
# set -g status "on"
# set -g pane-active-border-fg "#464b50"
# set -g message-bg "#464b50"
# set -g status-right-length "100"
# set -g status-right-attr "none"
# set -g message-fg "#838184"
# set -g message-command-bg "#464b50"
# set -g status-attr "none"
# set -g pane-border-fg "#323537"
# set -g status-left-attr "none"
# setw -g window-status-fg "#5f5a60"
# setw -g window-status-attr "none"
# setw -g window-status-activity-bg "#323537"
# setw -g window-status-activity-attr "none"
# setw -g window-status-activity-fg "#5f5a60"
# setw -g window-status-separator ""
# setw -g window-status-bg "#323537"
# set -g status-left "#[fg=#5f5a60,bg=#323537] #S #[fg=#323537,bg=#323537,nobold,nounderscore,noitalics]"
# # set -g status-right "#[fg=#323537,bg=#323537,nobold,nounderscore,noitalics]#[fg=#5f5a60,bg=#323537] %Y-%m-%d  %H:%M #[fg=#323537,bg=#323537,nobold,nounderscore,noitalics]#[fg=#5f5a60,bg=#323537]"
# # set -g status-right "#[fg=blue]#S #I:#P #[fg=yellow]: %d %b %Y #[fg=green]: %l:%M %p : #(date -u | awk '{print $4}') :"
# # set -g status-right "#[fg=blue]#(tmux-cpu --no-color)"
# setw -g window-status-format "#[fg=#5f5a60,bg=#323537] #I #[fg=#5f5a60,bg=#323537] #W "
# setw -g window-status-current-format "#[fg=#323537,bg=#464b50,nobold,nounderscore,noitalics]#[fg=#838184,bg=#464b50] #I #[fg=#838184,bg=#464b50] #W #[fg=#464b50,bg=#323537,nobold,nounderscore,noitalics]"

# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# COLORS
# ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'odedlaz/tmux-onedark-theme'
# Other examples:
# set -g @plugin 'github_username/plugin_name'
# set -g @plugin 'git@github.com/user/plugin'
# set -g @plugin 'git@bitbucket.com/user/plugin'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
set -g status-right " #[$onedark_white,bg=$onedark_black,]#(curl icanhazip.com)  #(ifconfig en0 | grep 'inet ' | awk '{print \"en0 \" $2}') #(ifconfig en1 | grep 'inet ' | awk '{print \"en1 \" $2}') #(ifconfig en3 | grep 'inet ' | awk '{print \"en3 \" $2}') #(ifconfig tun0 | grep 'inet ' | awk '{print \"vpn \" $2}') "
