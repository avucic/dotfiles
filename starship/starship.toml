# Warning: This config does not include keys that have an unset value
add_newline = true
command_timeout = 700
format = '$all'
scan_timeout = 30

[aws]
disabled = false
expiration_symbol = 'X'
format = 'on [$symbol($profile )(\($region\) )(\[$duration\])]($style)'
style = 'yellow'
symbol = '☁️  '

[aws.region_aliases]

[battery]
format = "[$symbol$percentage]($style) "

[character]
disabled = false
error_symbol = '[❯](bold red)'
format = '$symbol '
success_symbol = '[❯](bold green)'
vicmd_symbol = '[❮](bold green)'

[cmd_duration]
disabled = false
format = 'took [$duration]($style) '
min_time = 2000
min_time_to_notify = 45000
show_milliseconds = false
show_notifications = false
style = 'yellow'

[conda]
disabled = false
format = 'via [$symbol$environment]($style) '
ignore_base = true
style = 'green'
symbol = '🅒 '
truncation_length = 1

[crystal]
detect_extensions = ['cr']
detect_files = ['shard.yml']
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'red'
symbol = '🔮 '
version_format = 'v${raw}'

[dart]
detect_extensions = ['dart']
detect_files = [
  'pubspec.yaml',
  'pubspec.yml',
  'pubspec.lock',
]
detect_folders = ['.dart_tool']
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'blue'
symbol = '🎯 '
version_format = 'v${raw}'

[deno]
detect_extensions = []
detect_files = [
  'mod.ts',
  'deps.ts',
  'mod.js',
  'deps.js',
]
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'green'
symbol = '🦕 '
version_format = 'v${raw}'

[directory]
disabled = false
fish_style_pwd_dir_length = 0
format = '[$path]($style)[$read_only]($read_only_style) '
home_symbol = '~'
read_only = '🔒'
read_only_style = 'red'
style = 'purple'
truncate_to_repo = true
truncation_length = 3
truncation_symbol = ''
use_logical_path = true

[directory.substitutions]

[docker_context]
detect_extensions = []
detect_files = [
  'docker-compose.yml',
  'docker-compose.yaml',
  'Dockerfile',
]
detect_folders = []
disabled = false
format = 'via [$symbol$context]($style) '
only_with_files = true
style = 'blue'
symbol = '🐳 '

[dotnet]
detect_extensions = [
  'csproj',
  'fsproj',
  'xproj',
]
detect_files = [
  'global.json',
  'project.json',
  'Directory.Build.props',
  'Directory.Build.targets',
  'Packages.props',
]
detect_folders = []
disabled = false
format = '[$symbol($version )(🎯 $tfm )]($style)'
heuristic = true
style = 'blue'
symbol = '.NET '
version_format = 'v${raw}'

[elixir]
detect_extensions = []
detect_files = ['mix.exs']
detect_folders = []
disabled = false
format = 'via [$symbol($version \(OTP $otp_version\) )]($style)'
style = 'purple'
symbol = '💧 '
version_format = 'v${raw}'

[elm]
detect_extensions = ['elm']
detect_files = [
  'elm.json',
  'elm-package.json',
  '.elm-version',
]
detect_folders = ['elm-stuff']
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'cyan'
symbol = '🌳 '
version_format = 'v${raw}'

[env_var]
disabled = false
format = 'with [$env_value]($style) '
style = 'black dimmed'
symbol = ''

[erlang]
detect_extensions = []
detect_files = [
  'rebar.config',
  'erlang.mk',
]
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'red'
symbol = ' '
version_format = 'v${raw}'

[gcloud]
disabled = false
format = 'on [$symbol$account(@$domain)(\($region\))]($style) '
style = 'blue'
symbol = '☁️  '

[gcloud.region_aliases]

[git_branch]
always_show_remote = false
disabled = false
format = 'on [$symbol$branch]($style)(:[$remote]($style)) '
only_attached = false
style = '#FFA500'
symbol = ' '
truncation_length = 9223372036854775807
truncation_symbol = '…'

[git_commit]
commit_hash_length = 7
disabled = false
format = '[\($hash$tag\)]($style) '
only_detached = true
style = 'green'
tag_disabled = true
tag_symbol = ' 🏷  '

[git_state]
am = 'AM'
am_or_rebase = 'AM/REBASE'
bisect = 'BISECTING'
cherry_pick = 'CHERRY-PICKING'
disabled = false
format = '\([$state( $progress_current/$progress_total)]($style)\) '
merge = 'MERGING'
rebase = 'REBASING'
revert = 'REVERTING'
style = 'yellow'

[git_status]
ahead = '⇡'
behind = '⇣'
conflicted = '='
deleted = '✘'
disabled = false
diverged = '⇕'
format = '([\[$all_status$ahead_behind\]]($style) )'
modified = '!'
renamed = '»'
staged = '+'
stashed = '\$'
style = 'red'
untracked = '?'

[golang]
detect_extensions = ['go']
detect_files = [
  'go.mod',
  'go.sum',
  'glide.yaml',
  'Gopkg.yml',
  'Gopkg.lock',
  '.go-version',
]
detect_folders = ['Godeps']
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'cyan'
symbol = '🐹 '
version_format = 'v${raw}'

[helm]
detect_extensions = []
detect_files = [
  'helmfile.yaml',
  'Chart.yaml',
]
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'white'
symbol = '⎈ '
version_format = 'v${raw}'

[hg_branch]
disabled = true
format = 'on [$symbol$branch]($style) '
style = 'purple'
symbol = ' '
truncation_length = 9223372036854775807
truncation_symbol = '…'

[hostname]
disabled = false
format = '[$hostname]($style) in '
ssh_only = true
style = 'green dimmed'
trim_at = '.'

[java]
detect_extensions = [
  'java',
  'class',
  'jar',
  'gradle',
  'clj',
  'cljc',
]
detect_files = [
  'pom.xml',
  'build.gradle.kts',
  'build.sbt',
  '.java-version',
  'deps.edn',
  'project.clj',
  'build.boot',
]
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'red dimmed'
symbol = '☕ '
version_format = 'v${raw}'

[jobs]
disabled = false
format = '[$symbol$number]($style) '
style = 'blue'
symbol = '✦'
threshold = 1

[julia]
detect_extensions = ['jl']
detect_files = [
  'Project.toml',
  'Manifest.toml',
]
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'purple'
symbol = 'ஃ '
version_format = 'v${raw}'

[kotlin]
detect_extensions = [
  'kt',
  'kts',
]
detect_files = []
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
kotlin_binary = 'kotlin'
style = 'blue'
symbol = '🅺 '
version_format = 'v${raw}'

[kubernetes]
disabled = true
format = '[$symbol$context( \($namespace\))]($style) in '
style = 'cyan'
symbol = '☸ '

[kubernetes.context_aliases]

[lua]
detect_extensions = ['lua']
detect_files = ['.lua-version']
detect_folders = ['lua']
disabled = false
format = 'via [$symbol($version )]($style)'
lua_binary = 'lua'
style = 'blue'
symbol = '🌙 '
version_format = 'v${raw}'

[memory_usage]
disabled = true
format = 'via $symbol[$ram( | $swap)]($style) '
style = 'white dimmed'
symbol = '� '
threshold = 75

[nim]
detect_extensions = [
  'nim',
  'nims',
  'nimble',
]
detect_files = ['nim.cfg']
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'yellow'
symbol = '👑 '
version_format = 'v${raw}'

[nix_shell]
disabled = false
format = 'via [$symbol$state( \($name\))]($style) '
impure_msg = 'impure'
pure_msg = 'pure'
style = 'blue'
symbol = '❄️  '

[nodejs]
detect_extensions = [
  'js',
  'mjs',
  'cjs',
  'ts',
]
detect_files = [
  'package.json',
  '.node-version',
  '.nvmrc',
]
detect_folders = ['node_modules']
disabled = false
format = 'via [$symbol($version )]($style)'
not_capable_style = 'red'
style = 'green'
symbol = '⬡ '
version_format = 'v${raw}'

[ocaml]
detect_extensions = [
  'opam',
  'ml',
  'mli',
  're',
  'rei',
]
detect_files = [
  'dune',
  'dune-project',
  'jbuild',
  'jbuild-ignore',
  '.merlin',
]
detect_folders = [
  '_opam',
  'esy.lock',
]
disabled = false
format = 'via [$symbol($version )(\($switch_indicator$switch_name\) )]($style)'
global_switch_indicator = ''
local_switch_indicator = '*'
style = 'yellow'
symbol = '🐫 '
version_format = 'v${raw}'

[openstack]
disabled = false
format = 'on [$symbol$cloud(\($project\))]($style) '
style = 'yellow'
symbol = '☁️  '

[package]
disabled = false
display_private = false
format = 'is [$symbol$version]($style) '
style = '208'
symbol = '� '

[perl]
detect_extensions = [
  'pl',
  'pm',
  'pod',
]
detect_files = [
  'Makefile.PL',
  'Build.PL',
  'cpanfile',
  'cpanfile.snapshot',
  'META.json',
  'META.yml',
  '.perl-version',
]
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = '149'
symbol = '� '
version_format = 'v${raw}'

[php]
detect_extensions = ['php']
detect_files = [
  'composer.json',
  '.php-version',
]
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = '147'
symbol = '🐘 '
version_format = 'v${raw}'

[purescript]
detect_extensions = ['purs']
detect_files = ['spago.dhall']
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'white'
symbol = '<=> '
version_format = 'v${raw}'

[python]
detect_extensions = ['py']
detect_files = [
  'requirements.txt',
  '.python-version',
  'pyproject.toml',
  'Pipfile',
  'tox.ini',
  'setup.py',
  '__init__.py',
]
detect_folders = []
disabled = false
format = 'via [${symbol}${pyenv_prefix}(${version} )(\($virtualenv\) )]($style)'
pyenv_prefix = 'pyenv '
pyenv_version_name = false
python_binary = [
  'python',
  'python3',
  'python2',
]
style = 'yellow'
symbol = '� '
version_format = 'v${raw}'

[rlang]
detect_extensions = [
  'R',
  'Rd',
  'Rmd',
  'Rproj',
  'Rsx',
]
detect_files = ['.Rprofile']
detect_folders = ['.Rproj.user']
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'blue'
symbol = '📐 '
version_format = 'v${raw}'

[red]
detect_extensions = [
  'red',
  'reds',
]
detect_files = []
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'red'
symbol = '� '

[ruby]
detect_extensions = ['rb']
detect_files = [
  'Gemfile',
  '.ruby-version',
]
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'red'
symbol = '💎 '
version_format = 'v${raw}'

[rust]
detect_extensions = ['rs']
detect_files = ['Cargo.toml']
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'red'
symbol = '🦀 '
version_format = 'v${raw}'

[scala]
detect_extensions = [
  'sbt',
  'scala',
]
detect_files = [
  '.scalaenv',
  '.sbtenv',
  'build.sbt',
]
detect_folders = ['.metals']
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'red'
symbol = '🆂 '
version_format = 'v${raw}'

[shell]
bash_indicator = 'bsh'
disabled = true
elvish_indicator = 'esh'
fish_indicator = 'fsh'
format = '$indicator '
ion_indicator = 'ion'
powershell_indicator = 'psh'
tcsh_indicator = 'tsh'
unknown_indicator = ''
zsh_indicator = 'zsh'

[shlvl]
disabled = true
format = '[$symbol$shlvl]($style) '
repeat = false
style = 'yellow'
symbol = '↕️  '
threshold = 2

[singularity]
disabled = false
format = '[$symbol\[$env\]]($style) '
style = 'blue dimmed'
symbol = ''

[status]
disabled = true
format = '[$symbol$status]($style) '
map_symbol = false
not_executable_symbol = '🚫'
not_found_symbol = '🔍'
recognize_signal_code = true
sigint_symbol = '🧱'
signal_symbol = '⚡'
style = 'red'
symbol = '✖'

[swift]
detect_extensions = ['swift']
detect_files = ['Package.swift']
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = '202'
symbol = '🐦 '
version_format = 'v${raw}'

[terraform]
detect_extensions = [
  'tf',
  'hcl',
]
detect_files = []
detect_folders = ['.terraform']
disabled = false
format = 'via [$symbol$workspace]($style) '
style = '105'
symbol = '💠 '
version_format = 'v${raw}'

[time]
disabled = false
format = 'at [$time]($style) '
style = 'yellow'
time_range = '-'
use_12hr = false
utc_time_offset = 'local'

[username]
disabled = false
format = '[$user]($style) in '
show_always = false
style_root = 'red'
style_user = 'yellow'

[vlang]
detect_extensions = ['v']
detect_files = [
  'v.mod',
  'vpkg.json',
  '.vpkg-lock.json',
]
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'blue'
symbol = 'V '

[vagrant]
detect_extensions = []
detect_files = ['Vagrantfile']
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'cyan'
symbol = '⍱ '
version_format = 'v${raw}'

[zig]
detect_extensions = ['zig']
detect_files = []
detect_folders = []
disabled = false
format = 'via [$symbol($version )]($style)'
style = 'yellow'
symbol = '↯ '
version_format = 'v${raw}'

[custom]
